
/**
 * @copyright Copyright © contributors to Project Ocre,
 * which has been established as Project Ocre a Series of LF Projects, LLC
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * @file messages.h
 *
 * @details This file contains all message types that components may send to one another.
 * DO NOT EDIT THIS FILE.  The file is auto-generated at build-time.
 * 
 * How to add messages:
 *   1. Define message types in the component, for example, components/your-component/message_types.h
 *   2. Create a <component-name>.yaml definition that maps your message type to a message name
 *   3. Build! You can now use the message types in the component implementation
 */

#ifndef OCRE_MESSAGES_H_G
#define OCRE_MESSAGES_H_G

#include <stdint.h>

#include <messaging/message_types.h>
#include <components/device_manager/message_types.h>
#include <components/iwasm/message_types.h>

struct base_msg {
  int msg_id;
  int *from;
  struct base msg;
};

struct download_file_response_msg {
  int msg_id;
  int *from;
  struct download_file_response msg;
};

struct iwasm_response_msg {
  int msg_id;
  int *from;
  struct iwasm_response msg;
};

struct app_manager_response_msg {
  int msg_id;
  int *from;
  struct app_manager_response msg;
};

struct query_msg {
  int msg_id;
  int *from;
  struct query msg;
};

struct update_package_manifest_msg {
  int msg_id;
  int *from;
  struct update_package_manifest msg;
};

struct list_package_apps_response_msg {
  int msg_id;
  int *from;
  struct list_package_apps_response msg;
};

struct install_msg {
  int msg_id;
  int *from;
  struct install msg;
};

struct uninstall_msg {
  int msg_id;
  int *from;
  struct uninstall msg;
};

struct describe_firmware_resp_msg {
  int msg_id;
  int *from;
  struct describe_firmware_resp msg;
};

struct update_info_msg {
  int msg_id;
  int *from;
  struct update_info msg;
};

struct ocre_message {
  uint32_t event;

  union {
    union {
      struct describe_firmware_resp_msg describe_firmware_resp_msg;
      struct update_package_manifest_msg update_package_manifest_msg;
      struct iwasm_response_msg iwasm_response_msg;
      struct update_info_msg update_info_msg;
      struct download_file_response_msg download_file_response_msg;
      struct list_package_apps_response_msg list_package_apps_response_msg;
      struct base_msg base_msg;
    } device_manager;
    union {
      struct install_msg install_msg;
      struct app_manager_response_msg app_manager_response_msg;
      struct query_msg query_msg;
      struct uninstall_msg uninstall_msg;
      struct base_msg base_msg;
    } iwasm;
  } components;
};

#endif